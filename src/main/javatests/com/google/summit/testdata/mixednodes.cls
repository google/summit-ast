@A
@B(false)
@C({@D, @E})
public class Main implements I, J {
  enum E { A, B, C }
  integer field;
  interface I extends J {
    void foo();
  }
  String property {
    get { return property; }
    set { property = value; }
  }
  void foo(integer a, integer b) {
    try {
      while(true) {}
      integer sum = (double) foo(-a + b);
      integer i = new float[5] ? [SELECT COUNT() FROM Account] : false;
      Map<String, String> MyStrings = new Map<String, String>{'a' => 'b', 'c' => 'd'.toUpperCase()};
      update this.i;
      if(true) { 5; }
      return sum[0].bar * new Object.x(a=1, b=2);
    } catch (Exception e) { throw e; }
  }
}